<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
<package name="myPackage" namespace="/" extends="struts-default">
	<!-- 1.dispatcher方式跳转另一个jsp页面  -->
	<action name="dispatcherAction" class="com.chinasofti.Actions.DealActions" method="doAction">
	<param name="type">dispatcher方式</param><!-- 此种方式添加的数据，是放在request中的！ -->
		<result name="success" type="dispatcher">
			<param name="location">/showActionValue.jsp</param>
		</result>
	</action>
	
	<!-- 2.chain方式跳转另一个action -->
	<action name="chainAction" class="com.chinasofti.Actions.DealActions" method="doAction">
	<param name="type">chain方式</param><!-- chain方式需用此添加额外参数信息 -->
		<result name="success" type="chain">
			<param name="actionName">otherAction</param><!-- 不能写成otherAction?type=chain -->
		</result>
	</action>
	
	<action name="otherAction" class="com.chinasofti.Actions.ChainAction" method="doOtherAction">
	<!-- <param name="type">chain方式</param> --><!-- 上一个action中的同名param，优先级高于自己的 -->
		<result name="success" type="dispatcher">
			<param name="location">/showActionValue.jsp</param>
		</result>
	</action>
	
	<!-- 3.redirect方式跳转到另一个jsp页面 -->
	<action name="redirectJsp" class="com.chinasofti.Actions.DealActions" method="doAction">
	<param name="type">redirect</param>
		<result name="success" type="redirect">
			<!-- 注意：根据xml规范，"&"符号需要转移为"&amp;"！！！ -->
			<!-- 在struts.xml中，支持GONL，也就是可以用类似EL表达式，但要注意虽然strData来自于参数
			也不能写成${param.strData }，写成${strData }即可  -->
			<!-- 注意：在此种方法中传递中文参数会有乱码！ -->
			<param name="location">showActionValue.jsp?strData=${strData }&amp;type=${type }</param>
		</result>
	</action>
	
	<!-- 4.redirect action方式跳转到另一个action -->
	<action name="redirectAction" class="com.chinasofti.Actions.DealActions" method="doAction">
	<param name="type">redirect action方式</param>
		<result name="success" type="redirectAction">
			<param name="actionName">otherAction?strData=${strData }&amp;type=${type }</param>
			<!-- 第一个action的参数、request内置对象数据，在redirect action到第二个action时，会失效。
			因此，我们只能通过参数或session给第二个action传递数据。
			而参数数据会保存到第二个action对应类的同名属性当中，因此会被自动放到request的内置对象中。
			第二个action我们是以dispatcher方式转发到jsp页面中。
			所以结果就是在最终的jsp页面中，既能获得参数值，同时也能获得request内置对象的值！ -->
		</result>
	</action>
	
</package>
</struts>